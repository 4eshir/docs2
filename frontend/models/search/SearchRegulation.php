<?php

namespace frontend\models\search;

use common\components\dictionaries\base\RegulationTypeDictionary;
use common\components\interfaces\SearchInterfaces;
use frontend\models\search\abstractBase\RegulationSearch;
use frontend\models\work\regulation\RegulationWork;
use yii\base\Model;
use yii\data\ActiveDataProvider;
use yii\db\ActiveQuery;


class SearchRegulation extends RegulationSearch implements SearchInterfaces
{
    public function rules()
    {
        return parent::rules(); // TODO: Change the autogenerated stub
    }

    public function search($params)
    {
        $this->load($params);
        $query = RegulationWork::find()->where(['regulation_type' => RegulationTypeDictionary::TYPE_REGULATION]);

        $dataProvider = new ActiveDataProvider([
            'query' => $query,
            'sort' => ['defaultOrder' => ['id' => SORT_DESC]]
        ]);
        return $dataProvider;
    }

    public function filterQueryParams(ActiveQuery $query) {

    }

}
