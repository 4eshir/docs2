<?php

namespace frontend\forms\journal;

use common\Model;
use common\repositories\educational\VisitRepository;
use frontend\models\work\educational\journal\ParticipantLessons;
use frontend\models\work\educational\journal\VisitLesson;
use frontend\models\work\educational\journal\VisitWork;
use Yii;

class JournalForm extends Model
{
    /** @var VisitWork[] $visits */
    public array $visits;
    public $groupId;

    /** @var ParticipantLessons[] $participantLessons */
    public array $participantLessons = [];

    public function rules()
    {
        return [
            ['participantLessons', 'safe']
        ];
    }

    public function __construct($groupId = null, $config = [])
    {
        parent::__construct($config);
        if ($groupId !== null) {
            $this->groupId = $groupId;
            $this->visits = (Yii::createObject(VisitRepository::class))->getByTrainingGroup($this->groupId);

            foreach ($this->visits as $visit) {
                /** @var VisitWork $visit */
                $lessons = VisitLesson::fromString($visit->lessons);
                $this->participantLessons[] = new ParticipantLessons(
                    $visit->training_group_participant_id,
                    $lessons
                );
            }
        }
    }

    public function load($data, $formName = null)
    {
        // Дозагружаем VisitLesson вручную, ActiveRecord не справляется сам
        $newParticipantLessons = [];
        $visitLessons = $data["VisitLesson"];
        if (is_array($visitLessons)) {
            foreach ($visitLessons as $index => $visitLesson) {
                $lessonArray = [];
                foreach ($visitLesson as $lesson) {
                    $lessonArray[] = new VisitLesson(
                        $lesson["lessonId"],
                        $lesson["status"]
                    );
                }
                $newParticipantLessons[] = new ParticipantLessons(
                    $index,
                    $lessonArray
                );
            }
            $this->participantLessons = $newParticipantLessons;
        }
        return parent::load($data, $formName); // TODO: Change the autogenerated stub
    }
}